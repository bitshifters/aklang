Verse-chorus-verse. Aka Into the Archie-Verse.
~~~
An Archimedes demo framework.
Contains all accumulated libraries and code from previous prods.

Framework TODOs as of 15/5/24:
~~~
=> Add logo on screen and submit as blank framework. - DONE
- Separate tick/draw order from being tied together.
- Improve build using Tom's Python scripts and makefile-foo.
- Does ErrorV actually do anything?
- Move png2arc to Python 3.
- MOD file analyser to configure code / script.
- Move scripting to use seconds throughout?
- Create text-pool module from code in fx/bits.asm.
- Automatic clearing of BSS by loader?


ArchieKlang Announcetro
~~~
=> Like the oscilloscope view more when all channels are combined together.
    Kinda want this to fade?

Try?
- Lines not dots (expensive?) - DONE
- Previous buffers plotted above/below in darker colour to fade out? - DONE
- Use a Y buffer so they don't overlap? - DONE
- Add palette fade as lines move up.
- Custom faster line algo. - DONE
- More lines but with smaller amplitude - DONE
- Add 'zero' signal left and right of the wave lines - DONE
- Add header text - DONE
- Fade in header messages at the top (separate colour)
- Add iterator to header?
- Simple scroller at the bottom?
    - Use RISCOS font? Corpus is fixed width (but might look meh?)
    - Still need to figure out how to draw at the same Y pos for all glyphs.
    - (Write a word with ascenders and descenders then grab the max height)
    - Still need to work out which Y to plot at though!
    ==> This is not going to work even with fixed width font due to kerning.
    ==> Either use a traditional font or plot one word at a time from the scrolltext...
    ==> Make a rough calculation of how much RAM this would be...

TODO:
- Add ArchieKlang sample gen at some point!
- Plot samples as they're generated? Use same effect?
    - Plot and move after each one? Hmmm!

Line segment drawing.
dx is fixed == 4 (or whatever)
dy limited: -128 <= dy <= 127
Line segments are connected.

Use MODE 12.
Unroll all 256 possible code paths.
Just do Bresenham, steep and shallow paths with
x+=1:y+=0 => strb r4, [r11], #1
x+=1:y+=1 => strb r4, [r11], #-ScreenStride+1
x+=1:y-=1 => strb r4, [r11], #ScreenStride+1
x+=0:y+=1 => strb r4, [r11], #-ScreenStride
x+=0:y-=1 => strb r4, [r11], #ScreenStride
